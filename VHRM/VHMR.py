import win10toast
import datetime
import requests
import getpass
import base64
import time
import os
#INTENTAR VALIDAR CADA UNO DE LO APPLIANCE CON try y except


print("""

 ██▒   █▓ ██░ ██  ███▄ ▄███▓ ██▀███  
▓██░   █▒▓██░ ██▒▓██▒▀█▀ ██▒▓██ ▒ ██▒
 ▓██  █▒░▒██▀▀██░▓██    ▓██░▓██ ░▄█ ▒
  ▒██ █░░░▓█ ░██ ▒██    ▒██ ▒██▀▀█▄  
   ▒▀█░  ░▓█▒░██▓▒██▒   ░██▒░██▓ ▒██▒
   ░ ▐░   ▒ ░░▒░▒░ ▒░   ░  ░░ ▒▓ ░▒▓░
   ░ ░░   ▒ ░▒░ ░░  ░      ░  ░▒ ░ ▒░
     ░░   ░  ░░ ░░      ░     ░░   ░ 
      ░   ░  ░  ░       ░      ░     
     ░                               
[Coded by Mr-r00t11]
""")
while True:
    password = getpass.getpass("Introduce password>> ")
    if password == 'pssswword':
        print('[Iniciando sesión]')
        while True:
            class Connect_Requests:
                pass

                def __init__(self, url):
                    self.url = url

                def Send_Requests(self):
                    try:
                        self.r_g = requests.get(self.url)
                        if self.r_g.status_code == 200:
                            self.alive = 'Up'
                            self.value = self.r_g.status_code
                            print("{:^20} {:^20} {:^20}".format("Host",
                                                                "Value", "Status"))
                            #print (self.url.decode('utf8'), self.value, " ¡OK!")
                            print("{:<20} {:^20} {:^20} ".format("[+] Localhost",
                                                                 self.value, self.alive))
                            self.Encrypt()
                            self.Time()
                            self.File_Write()

                    except requests.exceptions.ConnectionError:
                        self.alive = 'Down'
                        print("[-] Verificar estado de conexión")
                        self.Notificator()

                def Notificator(self):
                    self.toaster = win10toast.ToastNotifier()
                    self.toaster.show_toast("¡Error de conexion!",
                                            "ERR_CONNECTION_REFUSED",
                                            icon_path="C://Users//charl//Visual Studio Code//Alarma//cancel.ico")

                def Encrypt(self):
                    self.encrypt = base64.b64encode(self.url)

                def File_Write(self):
                    self.file = open('log.txt', 'a')
                    self.file.write(
                        str(self.encrypt) + " " + str(self.date) + " status: " + str(self.alive) + "\n")
                    self.file.close()

                def Time(self):
                    self.date = datetime.datetime.now()

            http_get = Connect_Requests(b"http://150.20.10.13/")
            http_get.Send_Requests()
            time.sleep(10)  # REVISAR LOS TIEMPOS
            os.system("cls")
    else:
        print('Incorrect Password')
